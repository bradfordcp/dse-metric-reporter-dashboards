name: Package Kubernetes Resources

on:
  push:
    branches: 
      - master
      - k8s-packaging
  pull_request:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd k8s-build
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          cd k8s-build
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build k8s Resources and commit
        env:
          GA_PRIVATE_KEY: ${{ secrets.GA_PRIVATE_KEY }}
        run: |
          k8s-build/bin/clean.py
          k8s-build/bin/build.py
          
          which git
          git --version
          git diff --no-ext-diff --quiet 2>&1

          if ! git diff --no-ext-diff --quiet --exit-code; then
            git add .
            git config --local user.email "christopher.bradford@datastax.com"
            git config --local user.name "GitHub Actions"
            git commit -a -m "(re)generated kubernetes resources"
            git remote set-url origin "$(git config --get remote.origin.url | sed 's#http.*com/#git@github.com:#g')"
            eval `ssh-agent -t 60 -s`
            echo "$GA_PRIVATE_KEY" | ssh-add -
            mkdir -p ~/.ssh/
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git push
            ssh-agent -k
          fi
